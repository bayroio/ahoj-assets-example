{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/edgarherrador/Documents/Github/ahoj-assets/pages/assetledger.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// pages/assetledger.js\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}\n\nvar AssetLedger = function AssetLedger(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, \"Collection of Asset\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, \"Think of a Collection of Asset as a box of toys and each asset as a toy.\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }), __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }), __jsx(Link, {\n    href: \"/newcollection\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"Create a New Collection...\")), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }), __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, props.ledgers.map(function (ledger) {\n    return __jsx(\"li\", {\n      key: ledger.symbol,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      as: \"/p/\".concat(ledger.symbol),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, ledger.name), __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, ledger.symbol), __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, ledger.address)));\n  })));\n};\n\nAssetLedger.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('/api/ledgers'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            ledgers: data.map(function (ledger) {\n              return ledger;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n/*export default function AssetLedger() {\n  // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.name`\n  const name = data?.name;\n  let symbol = data?.symbol;\n  let address = data?.address;\n\n  if (!data) name = 'Loading...';\n  if (error) name = 'Failed to fetch the quote.';\n\n}*/\n\n\nexport default AssetLedger;","map":{"version":3,"sources":["/Users/edgarherrador/Documents/Github/ahoj-assets/pages/assetledger.js"],"names":["Layout","Link","useSWR","fetcher","url","fetch","then","r","json","AssetLedger","props","ledgers","map","ledger","symbol","name","address","getInitialProps","res","data","console","log","length"],"mappings":";;;;;;;AAAA;AAEA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAAjB,CAAP;AACD;;AAED,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK;AAAA,SACvB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,EAGc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHd,EAIE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAOQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPR,EAOc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPd,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkB,UAAAC,MAAM;AAAA,WACvB;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,EAAE,eAAQD,MAAM,CAACC,MAAf,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,MAAM,CAACE,IAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,MAAM,CAACC,MAAX,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,MAAM,CAACG,OAAX,CAHF,CADA,CADuB;AAAA,GAAxB,CADH,CARF,CADuB;AAAA,CAAzB;;AAuBAP,WAAW,CAACQ,eAAZ,GAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEVZ,KAAK,CAAC,cAAD,CAFK;;AAAA;AAEtBa,UAAAA,GAFsB;AAAA;AAAA,2CAGTA,GAAG,CAACV,IAAJ,EAHS;;AAAA;AAGtBW,UAAAA,IAHsB;AAK5BC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAL4B,2CAOrB;AACLX,YAAAA,OAAO,EAAEQ,IAAI,CAACP,GAAL,CAAS,UAAAC,MAAM;AAAA,qBAAIA,MAAJ;AAAA,aAAf;AADJ,WAPqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9B;AAYA;;;;;;;;;;;;;AAYA,eAAeJ,WAAf","sourcesContent":["// pages/assetledger.js\n\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nconst AssetLedger = props => (\n  <Layout>\n    <h1>Collection of Asset</h1> \n    <p>Think of a Collection of Asset as a box of toys and each asset as a toy.</p>\n    <br /><hr /><br />\n    <Link href=\"/newcollection\">\n      <a>Create a New Collection...</a>\n    </Link>\n    <br /><hr /><br />\n    <ul>\n      {props.ledgers.map(ledger => (\n        <li key={ledger.symbol}>\n        <Link href=\"/p/[id]\" as={`/p/${ledger.symbol}`}>\n          <a>{ledger.name}</a>\n          <a>{ledger.symbol}</a>\n          <a>{ledger.address}</a>\n        </Link>\n      </li>\n      ))} \n    </ul>\n  </Layout>\n);\n\nAssetLedger.getInitialProps = async function() {\n  //const { data, error } = useSWR('/api/ledgers', fetch);\n  const res = await fetch('/api/ledgers');\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    ledgers: data.map(ledger => ledger)\n  };\n};\n\n/*export default function AssetLedger() {\n  // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.name`\n  const name = data?.name;\n  let symbol = data?.symbol;\n  let address = data?.address;\n\n  if (!data) name = 'Loading...';\n  if (error) name = 'Failed to fetch the quote.';\n\n}*/\n\nexport default AssetLedger;"]},"metadata":{},"sourceType":"module"}