{"ast":null,"code":"var _jsxFileName = \"/Users/edgarherrador/Documents/Github/ahoj-assets/pages/assetledger.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// pages/assetledger.js\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport useSWR from 'swr';\nimport fetch from 'isomorphic-unfetch';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nconst AssetLedger = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, \"Collection of Asset\"), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, \"Think of a Collection of Asset as a box of toys and each asset as a toy.\"), __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}), __jsx(\"hr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 11\n  }\n}), __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 17\n  }\n}), __jsx(Link, {\n  href: \"/newcollection\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }\n}, \"Create a New Collection...\")), __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}), __jsx(\"hr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 11\n  }\n}), __jsx(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 17\n  }\n}), __jsx(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }\n}, props.ledgers.map(ledger => __jsx(\"li\", {\n  key: ledger.symbol,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${ledger.symbol}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 11\n  }\n}, ledger.name), __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }\n}, ledger.symbol), __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 11\n  }\n}, ledger.address))))));\n\nAssetLedger.getInitialProps = async function () {\n  //const { data, error } = useSWR('/api/ledgers', fetch);\n  const res = await fetch('/api/ledgers');\n  const data = await res.json();\n  console.log(`Show data fetched. Count: ${data.length}`);\n  return {\n    ledgers: data.map(ledger => ledger)\n  };\n};\n/*export default function AssetLedger() {\n  // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.name`\n  const name = data?.name;\n  let symbol = data?.symbol;\n  let address = data?.address;\n\n  if (!data) name = 'Loading...';\n  if (error) name = 'Failed to fetch the quote.';\n\n}*/\n\n\nexport default AssetLedger;","map":{"version":3,"sources":["/Users/edgarherrador/Documents/Github/ahoj-assets/pages/assetledger.js"],"names":["Layout","Link","useSWR","fetch","fetcher","url","then","r","json","AssetLedger","props","ledgers","map","ledger","symbol","name","address","getInitialProps","res","data","console","log","length"],"mappings":";;;AAAA;AAEA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOF,KAAK,CAACE,GAAD,CAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACD;;AAED,MAAMC,WAAW,GAAGC,KAAK,IACvB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,EAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHR,EAGc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHd,EAIE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPF,EAOQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPR,EAOc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPd,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkBC,MAAM,IACvB;AAAI,EAAA,GAAG,EAAEA,MAAM,CAACC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKD,MAAM,CAACC,MAAO,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,MAAM,CAACE,IAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIF,MAAM,CAACC,MAAX,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAID,MAAM,CAACG,OAAX,CAHF,CADA,CADD,CADH,CARF,CADF;;AAuBAP,WAAW,CAACQ,eAAZ,GAA8B,kBAAiB;AAC7C;AACA,QAAMC,GAAG,GAAG,MAAMf,KAAK,CAAC,cAAD,CAAvB;AACA,QAAMgB,IAAI,GAAG,MAAMD,GAAG,CAACV,IAAJ,EAAnB;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BF,IAAI,CAACG,MAAO,EAArD;AAEA,SAAO;AACLX,IAAAA,OAAO,EAAEQ,IAAI,CAACP,GAAL,CAASC,MAAM,IAAIA,MAAnB;AADJ,GAAP;AAGD,CAVD;AAYA;;;;;;;;;;;;;AAYA,eAAeJ,WAAf","sourcesContent":["// pages/assetledger.js\n\nimport Layout from '../components/MyLayout';\nimport Link from 'next/link';\nimport useSWR from 'swr';\nimport fetch from 'isomorphic-unfetch';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nconst AssetLedger = props => (\n  <Layout>\n    <h1>Collection of Asset</h1> \n    <p>Think of a Collection of Asset as a box of toys and each asset as a toy.</p>\n    <br /><hr /><br />\n    <Link href=\"/newcollection\">\n      <a>Create a New Collection...</a>\n    </Link>\n    <br /><hr /><br />\n    <ul>\n      {props.ledgers.map(ledger => (\n        <li key={ledger.symbol}>\n        <Link href=\"/p/[id]\" as={`/p/${ledger.symbol}`}>\n          <a>{ledger.name}</a>\n          <a>{ledger.symbol}</a>\n          <a>{ledger.address}</a>\n        </Link>\n      </li>\n      ))} \n    </ul>\n  </Layout>\n);\n\nAssetLedger.getInitialProps = async function() {\n  //const { data, error } = useSWR('/api/ledgers', fetch);\n  const res = await fetch('/api/ledgers');\n  const data = await res.json();\n\n  console.log(`Show data fetched. Count: ${data.length}`);\n\n  return {\n    ledgers: data.map(ledger => ledger)\n  };\n};\n\n/*export default function AssetLedger() {\n  // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.name`\n  const name = data?.name;\n  let symbol = data?.symbol;\n  let address = data?.address;\n\n  if (!data) name = 'Loading...';\n  if (error) name = 'Failed to fetch the quote.';\n\n}*/\n\nexport default AssetLedger;"]},"metadata":{},"sourceType":"module"}