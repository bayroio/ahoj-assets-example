{"ast":null,"code":"var _jsxFileName = \"/Users/edgarherrador/Documents/Github/ahoj-assets/pages/schema.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// pages/schema.js\nimport Layout from '../components/MyLayout';\nexport default function Schema() {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, \"Schema\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, \"Define a schema which contains information describing the asset. Think of an asset ledger as a box of toys, each asset as a toy and the schema as a text describing what\\u2019s inside that box. \"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"The schema will determine the name of each asset, the description and any other feature you\\u2019d like to add. Each schema has different mandatory properties. \"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \" For instance, if you use the schema to define your assets, you must setup a name, description and image for each token. Then you can add more optional properties up to you such as age or color. \"), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/edgarherrador/Documents/Github/ahoj-assets/pages/schema.js"],"names":["Layout","Schema"],"mappings":";;;AAAA;AAEA,OAAOA,MAAP,MAAmB,wBAAnB;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yMAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wKAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2MAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADF;AAUD","sourcesContent":["// pages/schema.js\n\nimport Layout from '../components/MyLayout';\n\nexport default function Schema() {\n  return (\n    <Layout>\n        <h1>Schema</h1> \n        <p>Define a schema which contains information describing the asset. Think of an asset ledger as a box of toys, each asset as a toy and the schema as a text describing what’s inside that box. </p>\n        <p>The schema will determine the name of each asset, the description and any other feature you’d like to add. Each schema has different mandatory properties. </p>\n        <p> For instance, if you use the schema to define your assets, you must setup a name, description and image for each token. Then you can add more optional properties up to you such as age or color. </p>\n        <hr />\n        <br />\n    </Layout>\n  );\n}"]},"metadata":{},"sourceType":"module"}